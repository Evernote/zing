# -*- coding: utf-8 -*-

"""Configuration settings for applications."""

#
# webassets
#

# Controls asset-related settings. Reference:
#   http://elsdoerfer.name/docs/webassets/django/settings.html
ASSETS_DEBUG = False

ASSETS_AUTO_BUILD = False

ASSETS_MANIFEST = 'json:%s' % (
    os.path.join(working_path('static'), 'manifest.json'),
)


#
# Allauth
#

# Determines whether or not the user is automatically logged out by a mere GET
# request.
ACCOUNT_LOGOUT_ON_GET = True

# The URL the user is redirected to on login
# https://docs.djangoproject.com/en/1.6/ref/settings/#login-redirect-url
LOGIN_REDIRECT_URL = "/"

# Custom allauth forms
ACCOUNT_FORMS = {
  'login': 'pootle.apps.accounts.forms.SignInForm',
}

# The allauth account adapters
ACCOUNT_ADAPTER = "pootle.apps.accounts.adapter.PootleAccountAdapter"
SOCIALACCOUNT_ADAPTER = 'accounts.social_adapter.PootleSocialAccountAdapter'

# Determines the e-mail verification method during signup: "mandatory",
# "optional", or "none".
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
SOCIALACCOUNT_EMAIL_VERIFICATION = 'optional'

# Number of days users will have to activate their accounts after registering
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = 10

# Whether an email is required on sign up. Must be true if email verification
# is mandatory
ACCOUNT_EMAIL_REQUIRED = True

# Confirm email on GET instead of POST. This is less secure, but one less step
# for users
ACCOUNT_CONFIRM_EMAIL_ON_GET = True

# Automatically sign users in upon email confirmation
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True

# Automatically sign users in upon password reset completion
ACCOUNT_LOGIN_ON_PASSWORD_RESET = True

# True to always remember user session. False to not remember. None to ask user.
ACCOUNT_SESSION_REMEMBER = True

# Whether user sign up is enabled
ZING_SIGNUP_ENABLED = True


#
# django-statici18n
#

# Needed to integrate with `staticfiles` and ensure files generated by
# `compilejsi18n` are under our desired path. For more details, read
# http://django-statici18n.readthedocs.io/en/latest/faq.html#using-a-placeholder-directory
STATICI18N_ROOT = working_path('static')

# Directory where generated files will be written to. Customized to avoid name
# clashing with `static/js`.
STATICI18N_OUTPUT_DIR = 'translations'

# Preserves behavior predating django-statici18n 1.7
STATICI18N_FILENAME_FUNCTION = 'statici18n.utils.legacy_filename'


#
# Reports
#

# Path to function (string) which provides data to mark user's activity
# chart with events
ZING_REPORTS_MARK_FUNC = ''

# Invoicing

# Path to PhantomJS binary (needed to generate PDF invoices)
ZING_INVOICES_PHANTOMJS_BIN = None

# Base directory where PDF invoices will be created
ZING_INVOICES_DIRECTORY = working_path('invoices')

# Your company name
ZING_INVOICES_COMPANY = "ACME"
# Your company's department
ZING_INVOICES_DEPARTMENT = "ACME Department"

# Usernames and respective payment details to send invoices to. Check the
# docs for further details.
ZING_INVOICES_RECIPIENTS = {}


#
# Scoring
#

ZING_SCORE_COEFFICIENTS = {
    'EDIT': 5.0/7,
    'REVIEW': 2.0/7,
    'SUGGEST': 0.2,
    'ANALYZE': 0.1,
}
